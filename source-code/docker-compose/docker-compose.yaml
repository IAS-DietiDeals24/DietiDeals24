# Base Docker Compose file

name: dietideals24-basecompose

services:
 
  backend:
    container_name: dietideals24-backend-app
    #build: # Uncomment this if you have only one docker-compose file
    #    context: ./Server/backend/ # Set the context (what is visible from the dockerfile)
    #    dockerfile: .dockerfiles/dev-Dockerfile # Choose the Dockerfile
    depends_on:
      backend-database:
        condition: service_healthy # In questo modo, il backend non sarà avviato finché non sarà verificata la condizione di definita da "healthcheck"
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-admin} # default: admin
      AUTH_COGNITO_URI: ${AUTH_COGNITO_URI}
      OAUTH2_JWT_JWK_SET_URI: ${OAUTH2_JWT_JWK_SET_URI}
      OAUTH2_JWT_ISSUER_URI: ${OAUTH2_JWT_ISSUER_URI}
      OAUTH2_JWT_CLIENTID: ${OAUTH2_JWT_CLIENTID}
      OAUTH2_JWT_CLIENTSECRET: ${OAUTH2_JWT_CLIENTSECRET}
    networks:
      - backendNetwork

  backend-database:
    container_name: dietideals24-backend-postgresDB
    image: postgres:16.3 # Immagine di Postgres già pronta
    restart: unless-stopped
    environment:
      POSTGRES_DB: backend
      POSTGRES_USER: dd24-admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin} # default: admin
    healthcheck: # Definisce la condizione di "healthcheck"
      test: ["CMD", "pg_isready", "-U", "dd24-admin", "-d", "backend"]
      interval: 15s
      timeout: 15s
      retries: 5
    volumes:
      - backend_database_data:/var/lib/postgresql/data
    networks:
      - backendNetwork

volumes:
  backend_database_data:

networks:
  backendNetwork: