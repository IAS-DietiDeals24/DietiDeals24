@startuml

!theme plain
top to bottom direction
skinparam pageSize A3

class Accesso {
  + Accesso(): 
  # onCreate(Bundle?): Unit
   venditoreRepository: VenditoreRepository
   profiloRepository: ProfiloRepository
   authRepository: AuthRepository
   compratoreRepository: CompratoreRepository
}
class AccountDto {
  + AccountDto(): 
  # profiloShallow: ProfiloShallowDto
  # astePosseduteShallow: Set<AstaShallowDto>
  # offerteCollegateShallow: Set<OffertaShallowDto>
  # password: String
  # notificheRicevuteShallow: Set<NotificaShallowDto>
  # tokens: TokensAccountDto
  # idAccount: Long
  # email: String
  # notificheInviateShallow: Set<NotificaShallowDto>
  + toAccount(): Account
   password: String
   email: String
   tokens: TokensAccountDto
   astePosseduteShallow: Set<AstaShallowDto>
   profiloShallow: ProfiloShallowDto
   notificheRicevuteShallow: Set<NotificaShallowDto>
   idAccount: Long
   notificheInviateShallow: Set<NotificaShallowDto>
   offerteCollegateShallow: Set<OffertaShallowDto>
}
class AccountShallowDto {
  + AccountShallowDto(Long, String): 
  + AccountShallowDto(): 
  - tipoAccount: String
  - idAccount: Long
   tipoAccount: String
   idAccount: Long
}
class AdapterAsteCreate {
  + AdapterAsteCreate(ItemCallback<AstaDto>, Resources): 
  + onBindViewHolder(ViewHolderAstaCreata, Int): Unit
  + onCreateViewHolder(ViewGroup, Int): ViewHolderAstaCreata
  + onViewDetachedFromWindow(ViewHolderAstaCreata): Unit
}
class AdapterHome {
  + AdapterHome(ItemCallback<AstaDto>, Resources): 
  + onViewDetachedFromWindow(ViewHolderAnteprimaAsta): Unit
  + onBindViewHolder(ViewHolderAnteprimaAsta, Int): Unit
  + onCreateViewHolder(ViewGroup, Int): ViewHolderAnteprimaAsta
}
class AdapterNotifiche {
  + AdapterNotifiche(ItemCallback<NotificaDto>, Resources): 
  + onViewDetachedFromWindow(ViewHolderNotifica): Unit
  + onBindViewHolder(ViewHolderNotifica, Int): Unit
  + onCreateViewHolder(ViewGroup, Int): ViewHolderNotifica
}
class AdapterOfferte {
  + AdapterOfferte(ItemCallback<OffertaDto>, Resources): 
  + onCreateViewHolder(ViewGroup, Int): ViewHolderOfferta
  + onViewDetachedFromWindow(ViewHolderOfferta): Unit
  + onBindViewHolder(ViewHolderOfferta, Int): Unit
}
class AdapterPartecipazioni {
  + AdapterPartecipazioni(ItemCallback<AstaDto>, Resources): 
  + onViewDetachedFromWindow(ViewHolderPartecipazione): Unit
  + onBindViewHolder(ViewHolderPartecipazione, Int): Unit
  + onCreateViewHolder(ViewGroup, Int): ViewHolderPartecipazione
}
class AnagraficaProfiloDto {
  + AnagraficaProfiloDto(): 
  + AnagraficaProfiloDto(String, String, LocalDate, String, String, String): 
  - genere: String
  - biografia: String
  - areaGeografica: String
  - nome: String
  - cognome: String
  - dataNascita: LocalDate
   dataNascita: LocalDate
   cognome: String
   genere: String
   areaGeografica: String
   nome: String
   biografia: String
}
enum ApiCall << enumeration >> {
  - ApiCall(): 
  + valueOf(String): ApiCall
  + values(): ApiCall[]
   entries: EnumEntries<ApiCall>
}
enum ApiCall << enumeration >> {
  - ApiCall(): 
  + values(): ApiCall[]
  + valueOf(String): ApiCall
   entries: EnumEntries<ApiCall>
}
enum ApiCall << enumeration >> {
  - ApiCall(): 
  + values(): ApiCall[]
  + valueOf(String): ApiCall
   entries: EnumEntries<ApiCall>
}
class AstaDiCompratoreDto {
  + AstaDiCompratoreDto(Long, String, CategoriaAstaShallowDto, String, String, LocalDate, LocalTime, byte[], Set<NotificaShallowDto>, AccountShallowDto, Set<OffertaShallowDto>): 
  + AstaDiCompratoreDto(): 
}
class AstaDiVenditoreDto {
  + AstaDiVenditoreDto(): 
  + AstaDiVenditoreDto(Long, String, CategoriaAstaShallowDto, String, String, LocalDate, LocalTime, byte[], Set<NotificaShallowDto>, AccountShallowDto, Set<OffertaShallowDto>): 
}
class AstaDto {
  + AstaDto(Long, String, CategoriaAstaShallowDto, String, String, LocalDate, LocalTime, byte[], Set<NotificaShallowDto>, AccountShallowDto, Set<OffertaShallowDto>): 
  + AstaDto(): 
  # descrizione: String
  # nome: String
  # dataScadenza: LocalDate
  # notificheAssociateShallow: Set<NotificaShallowDto>
  # categoriaShallow: CategoriaAstaShallowDto
  # proprietarioShallow: AccountShallowDto
  # oraScadenza: LocalTime
  # idAsta: Long
  # stato: String
  # immagine: byte[]
  - offerteRicevuteShallow: Set<OffertaShallowDto>
  + toAnteprimaAsta(): AnteprimaAsta
  + toAsta(): Asta
   oraScadenza: LocalTime
   offerteRicevuteShallow: Set<OffertaShallowDto>
   idAsta: Long
   nome: String
   notificheAssociateShallow: Set<NotificaShallowDto>
   categoriaShallow: CategoriaAstaShallowDto
   proprietarioShallow: AccountShallowDto
   dataScadenza: LocalDate
   immagine: byte[]
   stato: String
   descrizione: String
}
class AstaDtoComparator {
  + areItemsTheSame(AstaDto, AstaDto): Boolean
  + areContentsTheSame(AstaDto, AstaDto): Boolean
}
class AstaInversaDto {
  + AstaInversaDto(Long, String, CategoriaAstaShallowDto, String, String, LocalDate, LocalTime, byte[], Set<NotificaShallowDto>, AccountShallowDto, Set<OffertaShallowDto>, BigDecimal): 
  + AstaInversaDto(): 
  - sogliaIniziale: BigDecimal
  + toAsta(): Asta
  + toAnteprimaAsta(): AnteprimaAsta
   sogliaIniziale: BigDecimal
}
class AstaInversaPagingSource {
  + AstaInversaPagingSource(AstaInversaRepository, Long, String, String, ApiCall): 
  + suspend  load(LoadParams<Long>): LoadResult<Long, AstaInversaDto>
  + getRefreshKey(PagingState<Long, AstaInversaDto>): Long?
}
class AstaInversaRepository {
  + AstaInversaRepository(AstaInversaService): 
  + suspend  caricaAstaInversa(Long): AstaInversaDto
  + suspend  aggiornaAstaInversa(AstaInversaDto, Long): AstaInversaDto
  + suspend  ricercaAsteInverse(String, String, Long, Long): Page<AstaInversaDto>
  + suspend  creaAstaInversa(AstaInversaDto): AstaInversaDto
  + suspend  recuperaAsteCreateInverse(Long, Long, Long): Page<AstaInversaDto>
  + suspend  recuperaAsteInverse(Long, Long): Page<AstaInversaDto>
  + suspend  eliminaAstaInversa(Long): Unit
  + suspend  recuperaPartecipazioniInverse(Long, Long, Long): Page<AstaInversaDto>
}
interface AstaInversaService << interface >> {
  + suspend  caricaAstaInversa(Long): Response<AstaInversaDto>
  + suspend  recuperaPartecipazioniInverse(Long, Long, Long): Response<Page<AstaInversaDto>>
  + suspend  eliminaAstaInversa(Long): Response<Unit>
  + suspend  ricercaAsteInverse(String, String, Long, Long): Response<Page<AstaInversaDto>>
  + suspend  recuperaAsteCreateInverse(Long, Long, Long): Response<Page<AstaInversaDto>>
  + suspend  recuperaAsteInverse(Long, Long): Response<Page<AstaInversaDto>>
  + suspend  creaAstaInversa(AstaInversaDto): Response<AstaInversaDto>
  + suspend  aggiornaAstaInversa(AstaInversaDto, Long): Response<AstaInversaDto>
}
class AstaShallowDto {
  + AstaShallowDto(Long, String, String): 
  + AstaShallowDto(): 
  - tipoAstaSpecifica: String
  - idAsta: Long
  - tipoAstaPerAccount: String
   tipoAstaSpecifica: String
   tipoAstaPerAccount: String
   idAsta: Long
}
class AstaSilenziosaDto {
  + AstaSilenziosaDto(): 
  + AstaSilenziosaDto(Long, String, CategoriaAstaShallowDto, String, String, LocalDate, LocalTime, byte[], Set<NotificaShallowDto>, AccountShallowDto, Set<OffertaShallowDto>): 
  + toAnteprimaAsta(): AnteprimaAsta
  + toAsta(): Asta
}
class AstaSilenziosaPagingSource {
  + AstaSilenziosaPagingSource(AstaSilenziosaRepository, Long, String, String, ApiCall): 
  + suspend  load(LoadParams<Long>): LoadResult<Long, AstaSilenziosaDto>
  + getRefreshKey(PagingState<Long, AstaSilenziosaDto>): Long?
}
class AstaSilenziosaRepository {
  + AstaSilenziosaRepository(AstaSilenziosaService): 
  + suspend  creaAstaSilenziosa(AstaSilenziosaDto): AstaSilenziosaDto
  + suspend  eliminaAstaSilenziosa(Long): Unit
  + suspend  caricaAstaSilenziosa(Long): AstaSilenziosaDto
  + suspend  recuperaAsteSilenziose(Long, Long): Page<AstaSilenziosaDto>
  + suspend  aggiornaAstaSilenziosa(AstaSilenziosaDto, Long): AstaSilenziosaDto
  + suspend  ricercaAsteSilenziose(String, String, Long, Long): Page<AstaSilenziosaDto>
  + suspend  recuperaAsteCreateSilenziose(Long, Long, Long): Page<AstaSilenziosaDto>
  + suspend  recuperaPartecipazioniSilenziose(Long, Long, Long): Page<AstaSilenziosaDto>
}
interface AstaSilenziosaService << interface >> {
  + suspend  creaAstaSilenziosa(AstaSilenziosaDto): Response<AstaSilenziosaDto>
  + suspend  eliminaAstaSilenziosa(Long): Response<Unit>
  + suspend  caricaAstaSilenziosa(Long): Response<AstaSilenziosaDto>
  + suspend  recuperaAsteSilenziose(Long, Long): Response<Page<AstaSilenziosaDto>>
  + suspend  aggiornaAstaSilenziosa(AstaSilenziosaDto, Long): Response<AstaSilenziosaDto>
  + suspend  ricercaAsteSilenziose(String, String, Long, Long): Response<Page<AstaSilenziosaDto>>
  + suspend  recuperaAsteCreateSilenziose(Long, Long, Long): Response<Page<AstaSilenziosaDto>>
  + suspend  recuperaPartecipazioniSilenziose(Long, Long, Long): Response<Page<AstaSilenziosaDto>>
}
class AstaTempoFissoDto {
  + AstaTempoFissoDto(Long, String, CategoriaAstaShallowDto, String, String, LocalDate, LocalTime, byte[], Set<NotificaShallowDto>, AccountShallowDto, Set<OffertaShallowDto>, BigDecimal): 
  + AstaTempoFissoDto(): 
  - sogliaMinima: BigDecimal
  + toAnteprimaAsta(): AnteprimaAsta
  + toAsta(): Asta
   sogliaMinima: BigDecimal
}
class AstaTempoFissoPagingSource {
  + AstaTempoFissoPagingSource(AstaTempoFissoRepository, Long, String, String, ApiCall): 
  + suspend  load(LoadParams<Long>): LoadResult<Long, AstaTempoFissoDto>
  + getRefreshKey(PagingState<Long, AstaTempoFissoDto>): Long?
}
class AstaTempoFissoRepository {
  + AstaTempoFissoRepository(AstaTempoFissoService): 
  + suspend  recuperaAsteTempoFisso(Long, Long): Page<AstaTempoFissoDto>
  + suspend  ricercaAsteTempoFisso(String, String, Long, Long): Page<AstaTempoFissoDto>
  + suspend  recuperaPartecipazioniTempoFisso(Long, Long, Long): Page<AstaTempoFissoDto>
  + suspend  recuperaAsteCreateTempoFisso(Long, Long, Long): Page<AstaTempoFissoDto>
  + suspend  creaAstaTempoFisso(AstaTempoFissoDto): AstaTempoFissoDto
  + suspend  eliminaAstaTempoFisso(Long): Unit
  + suspend  caricaAstaTempoFisso(Long): AstaTempoFissoDto
  + suspend  aggiornaAstaTempoFisso(AstaTempoFissoDto, Long): AstaTempoFissoDto
}
interface AstaTempoFissoService << interface >> {
  + suspend  ricercaAsteTempoFisso(String, String, Long, Long): Response<Page<AstaTempoFissoDto>>
  + suspend  caricaAstaTempoFisso(Long): Response<AstaTempoFissoDto>
  + suspend  recuperaAsteCreateTempoFisso(Long, Long, Long): Response<Page<AstaTempoFissoDto>>
  + suspend  aggiornaAstaTempoFisso(AstaTempoFissoDto, Long): Response<AstaTempoFissoDto>
  + suspend  recuperaAsteTempoFisso(Long, Long): Response<Page<AstaTempoFissoDto>>
  + suspend  eliminaAstaTempoFisso(Long): Response<Unit>
  + suspend  recuperaPartecipazioniTempoFisso(Long, Long, Long): Response<Page<AstaTempoFissoDto>>
  + suspend  creaAstaTempoFisso(AstaTempoFissoDto): Response<AstaTempoFissoDto>
}
class AuthRepository {
  + AuthRepository(AuthService, DataStore<Preferences>): 
  + suspend  cancellaRuolo(): Unit
  + suspend  recuperaJWT(String, String): String
  + suspend  leggiJWT(): String
  + suspend  recuperaUrlAutenticazione(String): String
  + suspend  scriviJWT(String): Unit
  + suspend  leggiRuolo(): TipoAccount
  + suspend  scriviRuolo(TipoAccount): Unit
  + suspend  cancellaJWT(): Unit
}
interface AuthService << interface >> {
  + suspend  recuperaJWT(String, String): Response<TokenDto>
  + suspend  recuperaUrlAutenticazione(String): Response<UrlDto>
}
enum CategoriaAsta << enumeration >> {
  - CategoriaAsta(): 
  + values(): CategoriaAsta[]
  + valueOf(String): CategoriaAsta
   entries: EnumEntries<CategoriaAsta>
}
class CategoriaAstaDto {
  + CategoriaAstaDto(): 
  - nome: String
  - asteAssegnateShallow: Set<AstaShallowDto>
   nome: String
   asteAssegnateShallow: Set<AstaShallowDto>
}
class CategoriaAstaRepository {
  + CategoriaAstaRepository(CategoriaAstaService): 
  + suspend  recuperaCategorieAsta(): List<CategoriaAstaDto>
}
interface CategoriaAstaService << interface >> {
  + suspend  recuperaCategorieAste(Long, Long): Response<Page<CategoriaAstaDto>>
}
class CategoriaAstaShallowDto {
  + CategoriaAstaShallowDto(): 
  + CategoriaAstaShallowDto(String): 
  - nome: String
   nome: String
}
class Companion {
  + encodeImage(Uri?, Context): Byte[]?
}
class Companion {
  + getEnum(String): TipoAsta
}
class Companion {
  + fromStringToEnum(String): CategoriaAsta
  + fromEnumToString(CategoriaAsta): String
}
class Companion {
  + getExpirationDate(String): Long
  - decodePayload(String): String
  + getUserEmail(String): String
}
class CompratoreDto {
  + CompratoreDto(Long, String, String, TokensAccountDto, ProfiloShallowDto): 
  + CompratoreDto(): 
  + toAccount(): Account
}
class CompratoreRepository {
  + CompratoreRepository(CompratoreService): 
  + suspend  accediCompratore(String): CompratoreDto
  + suspend  caricaAccountCompratore(Long): CompratoreDto
}
interface CompratoreService << interface >> {
  + suspend  caricaAccountCompratore(Long): Response<CompratoreDto>
  + suspend  accediCompratore(String): Response<Page<CompratoreDto>>
}
class Controller<bindingType> {
  + Controller(): 
  # impostaEventiClick(): Unit
  # elaborazioneAggiuntiva(): Unit
  # impostaEventiDiCambiamentoCampi(): Unit
  # impostaMessaggiCorpo(): Unit
  # impostaOsservatori(): Unit
  + onViewCreated(View, Bundle?): Unit
  + onCreateView(LayoutInflater, ViewGroup?, Bundle?): View?
  # estraiTestoDaElemento(TextInputEditText): String
  # estraiTestoDaElemento(TextView): String
  + onDestroyView(): Unit
  # erroreCampo(Int, TextInputLayout[]): Unit
  # rimuoviErroreCampo(TextInputLayout[]): Unit
   fragmentActivity: FragmentActivity
   _logger: Logger
   fragmentView: View
   logger: Logger
   binding: bindingType
   fragmentContext: Context
}
class ControllerAiuto {
  + ControllerAiuto(): 
  + onAttach(Context): Unit
  # impostaEventiClick(): Unit
  + onDetach(): Unit
}
class ControllerAsteCreate {
  + ControllerAsteCreate(): 
  - suspend  recuperaAsteCreate(): Unit
  # elaborazioneAggiuntiva(): Unit
  + onResume(): Unit
  # impostaEventiClick(): Unit
  - clickIndietro(): Unit
  + onPause(): Unit
  + onAttach(Context): Unit
  + onDetach(): Unit
   adapterAsteCreate: AdapterAsteCreate
   viewModel: ModelAsteCreate
}
class ControllerCreaAsta {
  + ControllerCreaAsta(): 
  - apriGalleria(Map<String, Boolean>): Unit
  # impostaEventiClick(): Unit
  - clickCrea(): Unit
  # elaborazioneAggiuntiva(): Unit
  - rimuoviErroreCampi(): Unit
  - clickFoto(): Unit
  - clickDataScadenza(): Unit
  + onDetach(): Unit
  - suspend  creaAsta(): AstaDto
  + onAttach(Context): Unit
  + onCreate(Bundle?): Unit
  # impostaEventiDiCambiamentoCampi(): Unit
  - clickOraScadenza(): Unit
  # impostaOsservatori(): Unit
   astaSilenziosaRepository: AstaSilenziosaRepository
   astaInversaRepository: AstaInversaRepository
   viewModel: ModelAsta
   categoriaAstaRepository: CategoriaAstaRepository
   astaTempoFissoRepository: AstaTempoFissoRepository
}
class ControllerCreazioneProfiloFase1 {
  + ControllerCreazioneProfiloFase1(): 
  + onDetach(): Unit
  - clickAvanti(): Unit
  - clickDataNascita(): Unit
  # impostaEventiClick(): Unit
  # impostaEventiDiCambiamentoCampi(): Unit
  # impostaOsservatori(): Unit
  + onAttach(Context): Unit
  - clickIndietro(): Unit
   viewModel: ModelRegistrazione
}
class ControllerCreazioneProfiloFase2 {
  + ControllerCreazioneProfiloFase2(): 
  + onDetach(): Unit
  - clickAvanti(): Unit
  # impostaEventiClick(): Unit
  - apriGalleria(Map<String, Boolean>): Unit
  # elaborazioneAggiuntiva(): Unit
  + onAttach(Context): Unit
  # impostaOsservatori(): Unit
  - clickImmagine(): Unit
  - clickIndietro(): Unit
   viewModel: ModelRegistrazione
}
class ControllerCreazioneProfiloFase3 {
  + ControllerCreazioneProfiloFase3(): 
  + onAttach(Context): Unit
  # impostaOsservatori(): Unit
  - clickFine(): Unit
  - suspend  creazioneAccountVenditore(): AccountDto
  - clickIndietro(): Unit
  - suspend  creazioneAccountCompratore(): ProfiloDto
  # impostaEventiClick(): Unit
  + onDetach(): Unit
   venditoreRepository: VenditoreRepository
   profiloRepository: ProfiloRepository
   viewModel: ModelRegistrazione
}
class ControllerDettagliAsta {
  + ControllerDettagliAsta(): 
  - suspend  caricaAsta(): AstaDto
  - clickImmagine(): Unit
  + onResume(): Unit
  - clickConferma(): Unit
  - controlloOfferta(TextInputLayout, AlertDialog): Unit
  + onPause(): Unit
  - clickAiuto(): Unit
  # impostaEventiClick(): Unit
  - isPriceInvalid(String): Boolean
  + onAttach(Context): Unit
  # impostaOsservatori(): Unit
  - suspend  eliminaAsta(): Unit
  - suspend  caricaAccount(Long): AccountDto
  - clickModifica(): Unit
  - clickElimina(): Unit
  - clickOfferte(): Unit
  # elaborazioneAggiuntiva(): Unit
  - clickOfferta(): Unit
  - suspend  inviaOfferta(BigDecimal): OffertaDto
  - suspend  caricaProfilo(String): ProfiloDto
  + onDetach(): Unit
  - clickIndietro(): Unit
  - suspend  recuperaOfferta(Long, TipoAsta): OffertaDto
   offertaSilenziosaRepository: OffertaSilenziosaRepository
   args: ControllerDettagliAstaArgs
   venditoreRepository: VenditoreRepository
   profiloRepository: ProfiloRepository
   astaInversaRepository: AstaInversaRepository
   astaTempoFissoRepository: AstaTempoFissoRepository
   astaSilenziosaRepository: AstaSilenziosaRepository
   offertaInversaRepository: OffertaInversaRepository
   offertaTempoFissoRepository: OffertaTempoFissoRepository
   viewModel: ModelAsta
   compratoreRepository: CompratoreRepository
}
class ControllerDettagliProfilo {
  + ControllerDettagliProfilo(): 
  # impostaEventiClick(): Unit
  - clickIndietro(): Unit
  - clickGitHub(): Unit
  - clickInstagram(): Unit
  # impostaOsservatori(): Unit
  - suspend  caricaAccount(): AccountDto
  - suspend  caricaProfilo(String): ProfiloDto
  + onDetach(): Unit
  + onAttach(Context): Unit
  - clickX(): Unit
  - clickFacebook(): Unit
  - clickModifica(): Unit
  # elaborazioneAggiuntiva(): Unit
   viewModel: ModelProfilo
   venditoreRepository: VenditoreRepository
   args: ControllerDettagliProfiloArgs
   profiloRepository: ProfiloRepository
   compratoreRepository: CompratoreRepository
}
class ControllerHome {
  + ControllerHome(): 
  # elaborazioneAggiuntiva(): Unit
  + onResume(): Unit
  # impostaEventiClick(): Unit
  + onPause(): Unit
  # impostaOsservatori(): Unit
  - suspend  recuperaAste(): Unit
   viewModel: ModelHome
   categoriaAstaRepository: CategoriaAstaRepository
   adapterHome: AdapterHome
}
class ControllerModificaAsta {
  + ControllerModificaAsta(): 
  - rimuoviErroreCampi(): Unit
  - clickIndietro(): Unit
  - suspend  aggiornaAsta(): AstaDto
  - clickOraScadenza(): Unit
  - clickDataScadenza(): Unit
  - suspend  caricaAsta(): AstaDto
  - suspend  caricaProfilo(String): ProfiloDto
  # impostaEventiClick(): Unit
  - apriGalleria(Map<String, Boolean>): Unit
  + onAttach(Context): Unit
  # impostaOsservatori(): Unit
  # elaborazioneAggiuntiva(): Unit
  # impostaEventiDiCambiamentoCampi(): Unit
  + onDetach(): Unit
  - suspend  caricaAccount(Long): AccountDto
  - clickModifica(): Unit
  - clickFoto(): Unit
  # impostaMessaggiCorpo(): Unit
   venditoreRepository: VenditoreRepository
   repositoryAstaSilenziosa: AstaSilenziosaRepository
   repositoryAstaTempoFisso: AstaTempoFissoRepository
   categoriaAstaRepository: CategoriaAstaRepository
   repositoryAstaInversa: AstaInversaRepository
   repositoryProfilo: ProfiloRepository
   viewModel: ModelAsta
   args: ControllerModificaAstaArgs
   compratoreRepository: CompratoreRepository
}
class ControllerModificaProfilo {
  + ControllerModificaProfilo(): 
  - clickInstagram(): Unit
  # impostaEventiClick(): Unit
  - clickIndietro(): Unit
  - apriGalleria(Map<String, Boolean>): Unit
  # elaborazioneAggiuntiva(): Unit
  # impostaOsservatori(): Unit
  + onAttach(Context): Unit
  - clickFacebook(): Unit
  - suspend  aggiornaProfilo(): ProfiloDto
  - clickDataNascita(): Unit
  - clickX(): Unit
  - clickConferma(): Unit
  + onDetach(): Unit
  - clickGitHub(): Unit
  - clickPulsanteImmagine(): Unit
   viewModel: ModelProfilo
   repositoryProfilo: ProfiloRepository
}
class ControllerNotifiche {
  + ControllerNotifiche(): 
  # elaborazioneAggiuntiva(): Unit
  + onResume(): Unit
  + onPause(): Unit
  - suspend  aggiornaNotifiche(): Unit
   viewModel: ModelNotifiche
   adapterNotifiche: AdapterNotifiche
}
class ControllerOfferte {
  + ControllerOfferte(): 
  + onResume(): Unit
  # impostaEventiClick(): Unit
  # elaborazioneAggiuntiva(): Unit
  - suspend  aggiornaOfferte(): Unit
  + onPause(): Unit
  + onDetach(): Unit
  + onAttach(Context): Unit
  - clickIndietro(): Unit
   adapterOfferte: AdapterOfferte
   args: ControllerOfferteArgs
   viewModel: ModelAsta
}
class ControllerPartecipazioni {
  + ControllerPartecipazioni(): 
  + onAttach(Context): Unit
  + onPause(): Unit
  + onResume(): Unit
  # impostaEventiClick(): Unit
  - clickIndietro(): Unit
  + onDetach(): Unit
  # elaborazioneAggiuntiva(): Unit
  - suspend  recuperaPartecipazioni(): Unit
   adapterPartecipazioni: AdapterPartecipazioni
   viewModel: ModelPartecipazioni
}
class ControllerProfilo {
  + ControllerProfilo(): 
  - clickAiuto(): Unit
  # impostaEventiClick(): Unit
  - clickStorico(): Unit
  + onAttach(Context): Unit
  - clickAste(): Unit
  - suspend  caricaAccount(): AccountDto
  - clickEsci(): Unit
  # impostaMessaggiCorpo(): Unit
  + onDetach(): Unit
  - suspend  caricaProfilo(String): ProfiloDto
  - clickUtente(): Unit
   venditoreRepository: VenditoreRepository
   profiloRepository: ProfiloRepository
   authRepository: AuthRepository
   compratoreRepository: CompratoreRepository
}
class ControllerSelezioneAccessoRegistrazione {
  + ControllerSelezioneAccessoRegistrazione(): 
  + onAttach(Context): Unit
  # impostaMessaggiCorpo(): Unit
  - clickAccedi(): Unit
  # impostaEventiClick(): Unit
  + onDetach(): Unit
  - clickRegistrati(): Unit
   authRepository: AuthRepository
}
class ControllerSelezioneTipoAccount {
  + ControllerSelezioneTipoAccount(): 
  - clickVenditore(): Unit
  + onDetach(): Unit
  + onAttach(Context): Unit
  - clickOspite(): Unit
  # impostaEventiClick(): Unit
  - clickCompratore(): Unit
  # elaborazioneAggiuntiva(): Unit
   authRepository: AuthRepository
}
class CurrentUser {
   id: Long
   jwt: String
   tipoAccount: TipoAccount
}
class DietiDeals24Activity<bindingType> {
  + DietiDeals24Activity(): 
  # onCreate(Bundle?): Unit
   binding: bindingType
}
class DietiDeals24Application {
  + DietiDeals24Application(): 
  + onCreate(): Unit
}
class EccezioneAccountNonEsistente {
  + EccezioneAccountNonEsistente(String): 
   message: String
}
class EccezioneCampiNonCompilati {
  + EccezioneCampiNonCompilati(String): 
   message: String
}
class EccezioneDataPassata {
  + EccezioneDataPassata(String): 
   message: String
}
class EccezioneEmailNonValida {
  + EccezioneEmailNonValida(String): 
   message: String
}
class EccezioneEmailUsata {
  + EccezioneEmailUsata(String): 
   message: String
}
class EccezioneNomeUtenteUsato {
  + EccezioneNomeUtenteUsato(String): 
   message: String
}
class EccezionePasswordNonSicura {
  + EccezionePasswordNonSicura(String): 
   message: String
}
annotation EventHandler << annotation >>
class ExtensionsKt {
  + toMillis(LocalDate): Long
  + toLocalStringShort(LocalDate): String
  + toStringShort(LocalTime): String
  + toLocalDate(Long): LocalDate
}
class HeaderInterceptor {
  + intercept(Chain): Response
}
class Home {
  + Home(): 
  + onGoToDetails(Long, TipoAsta, KClass<?>): Unit
  + onRefresh(Long, TipoAsta, KClass<?>): Unit
  + onBackButton(): Unit
  + onChangeActivity(Class<Activity>): Unit
  # onCreate(Bundle?): Unit
  + onGoToHome(): Unit
  + onGoToCreatedAuctions(): Unit
  + onGoToProfile(Long, KClass<?>): Unit
  + onGoToHelp(): Unit
  + onHideMaterialDivider(Boolean): Unit
  + onEditButton(Long, TipoAsta, KClass<?>): Unit
  + onGoToParticipation(): Unit
  + onGoToBids(Long, TipoAsta, KClass<?>): Unit
  + onOpenUrl(String): Unit
   viewModelProfilo: ModelProfilo
   viewModelAsteCreate: ModelAsteCreate
   navController: NavController
   viewModelHome: ModelHome
   viewModelAsta: ModelAsta
   viewModelNotifiche: ModelNotifiche
}
class ImageHandler {
  + ImageHandler(): 
}
class JWT {
  + JWT(): 
}
class KoinModulesKt {
  + getDataStore(Context): DataStore<Preferences>
   repositoryModule: Module
   viewModelModule: Module
   facebookModule: Module
   serviceModule: Module
   adapterModule: Module
   pagingSourceModule: Module
   loggerModule: Module
   dataStoreModule: Module
}
class LinksProfiloDto {
  + LinksProfiloDto(): 
  + LinksProfiloDto(String, String, String, String, String): 
  - linkGitHub: String
  - linkInstagram: String
  - linkPersonale: String
  - linkX: String
  - linkFacebook: String
   linkFacebook: String
   linkGitHub: String
   linkX: String
   linkPersonale: String
   linkInstagram: String
}
class Logger {
  + Logger(DataStore<Preferences>): 
  + suspend  scriviLog(String): Unit
  + suspend  cancellaLog(): Unit
}
class ModelAsta {
  + ModelAsta(OffertaInversaRepository, OffertaTempoFissoRepository, OffertaSilenziosaRepository): 
  + clear(): Unit
  - invalidateTempoFisso(): Unit
  - descrizione(): Unit
  + toAstaInversa(): AstaInversaDto
  - invalidateSilenziose(): Unit
  + toAstaSilenziosa(): AstaSilenziosaDto
  - invalidateInverse(): Unit
  + validate(): Unit
  - prezzo(): Unit
  - oraFine(): Unit
  - nome(): Unit
  + invalidate(): Unit
  + toAstaTempoFisso(): AstaTempoFissoDto
  - dataFine(): Unit
  - categoria(): Unit
   idAsta: MutableLiveData<Long>
   prezzo: MutableLiveData<BigDecimal>
   silenzioseFlows: Flow<PagingData<OffertaDto>>
   _dataFine: MutableLiveData<LocalDate>
   nome: MutableLiveData<String>
   oraFine: MutableLiveData<LocalTime>
   _oraFine: MutableLiveData<LocalTime>
   pagerSilenziose: Pager<Long, OffertaSilenziosaDto>
   dataFine: MutableLiveData<LocalDate>
   tipo: MutableLiveData<TipoAsta>
   _idAsta: MutableLiveData<Long>
   stato: MutableLiveData<StatoAsta>
   tempoFissoFlows: Flow<PagingData<OffertaDto>>
   flowSilenziose: Flow<PagingData<OffertaSilenziosaDto>>
   _idCreatore: MutableLiveData<Long>
   inverseFlows: Flow<PagingData<OffertaDto>>
   nomeCreatore: MutableLiveData<String>
   _nome: MutableLiveData<String>
   _categoria: MutableLiveData<CategoriaAsta>
   _stato: MutableLiveData<StatoAsta>
   pagerInverse: Pager<Long, OffertaInversaDto>
   categoria: MutableLiveData<CategoriaAsta>
   _nomeCreatore: MutableLiveData<String>
   immagine: MutableLiveData<Byte[]>
   idCreatore: MutableLiveData<Long>
   pagerTempoFisso: Pager<Long, OffertaTempoFissoDto>
   _immagine: MutableLiveData<Byte[]>
   _prezzo: MutableLiveData<BigDecimal>
   _descrizione: MutableLiveData<String>
   descrizione: MutableLiveData<String>
   flowInverse: Flow<PagingData<OffertaInversaDto>>
   flowTempoFisso: Flow<PagingData<OffertaTempoFissoDto>>
   _tipo: MutableLiveData<TipoAsta>
}
class ModelAsteCreate {
  + ModelAsteCreate(AstaInversaRepository, AstaTempoFissoRepository, AstaSilenziosaRepository): 
  - invalidateSilenziose(): Unit
  + invalidate(): Unit
  - invalidateInverse(): Unit
  - invalidateTempoFisso(): Unit
   asteTempoFissoFlows: Flow<PagingData<AstaDto>>
   asteInverseFlows: Flow<PagingData<AstaDto>>
   asteSilenzioseFlows: Flow<PagingData<AstaDto>>
   pagerInverse: Pager<Long, AstaInversaDto>
   flowSilenziose: Flow<PagingData<AstaSilenziosaDto>>
   filtro: Int
   pagerSilenziose: Pager<Long, AstaSilenziosaDto>
   flowInverse: Flow<PagingData<AstaInversaDto>>
   pagerTempoFisso: Pager<Long, AstaTempoFissoDto>
   flowTempoFisso: Flow<PagingData<AstaTempoFissoDto>>
}
class ModelHome {
  + ModelHome(AstaInversaRepository, AstaTempoFissoRepository, AstaSilenziosaRepository): 
  - invalidateSilenzioseTutte(): Unit
  - invalidateInverseTutte(): Unit
  - invalidateTempoFissoRicerca(): Unit
  - invalidateSilenzioseRicerca(): Unit
  - invalidateTutte(): Unit
  - invalidateRicerca(): Unit
  - invalidateInverseRicerca(): Unit
  - invalidateTempoFissoTutte(): Unit
  + invalidate(): Unit
   asteInverseFlows: Flow<PagingData<AstaDto>>
   pagerSilenzioseTutte: Pager<Long, AstaSilenziosaDto>
   flowTempoFissoTutte: Flow<PagingData<AstaTempoFissoDto>>
   asteSilenzioseFlows: Flow<PagingData<AstaDto>>
   filter: MutableStateFlow<String>
   pagerSilenzioseRicerca: Pager<Long, AstaSilenziosaDto>
   asteTempoFissoFlows: Flow<PagingData<AstaDto>>
   searchText: MutableStateFlow<String>
   flowSilenzioseTutte: Flow<PagingData<AstaSilenziosaDto>>
   flowInverseTutte: Flow<PagingData<AstaInversaDto>>
   pagerInverseRicerca: Pager<Long, AstaInversaDto>
   pagerInverseTutte: Pager<Long, AstaInversaDto>
   pagerTempoFissoRicerca: Pager<Long, AstaTempoFissoDto>
   tipo: Int
   pagerTempoFissoTutte: Pager<Long, AstaTempoFissoDto>
}
class ModelNotifiche {
  + ModelNotifiche(NotificaRepository): 
  - invalidateNotifiche(): Unit
  + invalidate(): Unit
   pagerNotifiche: Pager<Long, NotificaDto>
   flowNotifiche: Flow<PagingData<NotificaDto>>
   notificheFlows: Flow<PagingData<NotificaDto>>
}
class ModelPartecipazioni {
  + ModelPartecipazioni(AstaInversaRepository, AstaTempoFissoRepository, AstaSilenziosaRepository): 
  - invalidateTempoFisso(): Unit
  - invalidateInverse(): Unit
  + invalidate(): Unit
  - invalidateSilenziose(): Unit
   asteTempoFissoFlows: Flow<PagingData<AstaDto>>
   asteInverseFlows: Flow<PagingData<AstaDto>>
   asteSilenzioseFlows: Flow<PagingData<AstaDto>>
   pagerInverse: Pager<Long, AstaInversaDto>
   flowSilenziose: Flow<PagingData<AstaSilenziosaDto>>
   filtro: Int
   pagerSilenziose: Pager<Long, AstaSilenziosaDto>
   flowInverse: Flow<PagingData<AstaInversaDto>>
   pagerTempoFisso: Pager<Long, AstaTempoFissoDto>
   flowTempoFisso: Flow<PagingData<AstaTempoFissoDto>>
}
class ModelProfilo {
  + ModelProfilo(): 
  + toProfilo(): ProfiloDto
  + clear(): Unit
  - nome(): Unit
  + validate(): Unit
  - dataNascita(): Unit
  - cognome(): Unit
   _linkX: MutableLiveData<String>
   _email: MutableLiveData<String>
   biografia: MutableLiveData<String>
   nome: MutableLiveData<String>
   _linkPersonale: MutableLiveData<String>
   nomeUtente: MutableLiveData<String>
   genere: MutableLiveData<String>
   _biografia: MutableLiveData<String>
   linkGitHub: MutableLiveData<String>
   linkX: MutableLiveData<String>
   tipoAccount: MutableLiveData<String>
   _tipoAccount: MutableLiveData<String>
   immagineProfilo: MutableLiveData<Byte[]>
   linkPersonale: MutableLiveData<String>
   cognome: MutableLiveData<String>
   areaGeografica: MutableLiveData<String>
   linkInstagram: MutableLiveData<String>
   _linkGitHub: MutableLiveData<String>
   _cognome: MutableLiveData<String>
   _nome: MutableLiveData<String>
   _nomeUtente: MutableLiveData<String>
   _linkInstagram: MutableLiveData<String>
   email: MutableLiveData<String>
   _immagineProfilo: MutableLiveData<Byte[]>
   _linkFacebook: MutableLiveData<String>
   idAccount: MutableLiveData<Long>
   dataNascita: MutableLiveData<LocalDate>
   _dataNascita: MutableLiveData<LocalDate>
   linkFacebook: MutableLiveData<String>
   _genere: MutableLiveData<String>
   _areaGeografica: MutableLiveData<String>
   _idAccount: MutableLiveData<Long>
}
class ModelRegistrazione {
  + ModelRegistrazione(ProfiloRepository): 
  - suspend  nomeUtente(): Unit
  - nome(): Unit
  + toPutAccountCompratore(): PutProfiloDto
  - dataNascita(): Unit
  + toAccountVenditore(): VenditoreDto
  - cognome(): Unit
  - suspend  esisteNomeUtente(): Boolean
  + suspend  validateProfile(): Unit
   _linkX: MutableLiveData<String>
   _facebookAccountID: MutableLiveData<String>
   _email: MutableLiveData<String>
   biografia: MutableLiveData<String>
   nome: MutableLiveData<String>
   _linkPersonale: MutableLiveData<String>
   nomeUtente: MutableLiveData<String>
   genere: MutableLiveData<String>
   _biografia: MutableLiveData<String>
   linkGitHub: MutableLiveData<String>
   linkX: MutableLiveData<String>
   tipoAccount: MutableLiveData<TipoAccount>
   _tipoAccount: MutableLiveData<TipoAccount>
   immagineProfilo: MutableLiveData<Byte[]>
   facebookAccountID: MutableLiveData<String>
   linkPersonale: MutableLiveData<String>
   cognome: MutableLiveData<String>
   areaGeografica: MutableLiveData<String>
   linkInstagram: MutableLiveData<String>
   _linkGitHub: MutableLiveData<String>
   _cognome: MutableLiveData<String>
   _nome: MutableLiveData<String>
   _nomeUtente: MutableLiveData<String>
   _linkInstagram: MutableLiveData<String>
   email: MutableLiveData<String>
   _immagineProfilo: MutableLiveData<Byte[]>
   _linkFacebook: MutableLiveData<String>
   idAccount: MutableLiveData<Long>
   dataNascita: MutableLiveData<LocalDate>
   password: MutableLiveData<String>
   _dataNascita: MutableLiveData<LocalDate>
   _password: MutableLiveData<String>
   linkFacebook: MutableLiveData<String>
   _genere: MutableLiveData<String>
   _areaGeografica: MutableLiveData<String>
   _idAccount: MutableLiveData<Long>
}
class NotificaDto {
  + NotificaDto(): 
  - dataInvio: LocalDate
  - messaggio: String
  - astaAssociataShallow: AstaShallowDto
  - idNotifica: Long
  - oraInvio: LocalTime
  - mittenteShallow: AccountShallowDto
  - destinatariShallow: Set<AccountShallowDto>
  + toNotifica(): Notifica
   astaAssociataShallow: AstaShallowDto
   dataInvio: LocalDate
   idNotifica: Long
   messaggio: String
   destinatariShallow: Set<AccountShallowDto>
   mittenteShallow: AccountShallowDto
   oraInvio: LocalTime
}
class NotificaDtoComparator {
  + areContentsTheSame(NotificaDto, NotificaDto): Boolean
  + areItemsTheSame(NotificaDto, NotificaDto): Boolean
}
class NotificaPagingSource {
  + NotificaPagingSource(NotificaRepository, Long): 
  + suspend  load(LoadParams<Long>): LoadResult<Long, NotificaDto>
  + getRefreshKey(PagingState<Long, NotificaDto>): Long?
}
class NotificaRepository {
  + NotificaRepository(NotificaService): 
  + suspend  recuperaNotifiche(Long, Long, Long): Page<NotificaDto>
}
interface NotificaService << interface >> {
  + suspend  recuperaNotifiche(Long, Long, Long): Response<Page<NotificaDto>>
}
class NotificaShallowDto {
  + NotificaShallowDto(): 
  - idNotifica: Long
   idNotifica: Long
}
class OffertaDiCompratoreDto {
  + OffertaDiCompratoreDto(Long, LocalDate, LocalTime, BigDecimal, AccountShallowDto, AstaShallowDto): 
  + OffertaDiCompratoreDto(): 
  # compratoreCollegatoShallow: AccountShallowDto
   compratoreCollegatoShallow: AccountShallowDto
}
class OffertaDiVenditoreDto {
  + OffertaDiVenditoreDto(): 
  + OffertaDiVenditoreDto(Long, LocalDate, LocalTime, BigDecimal, AccountShallowDto, AstaShallowDto): 
  # venditoreCollegatoShallow: AccountShallowDto
   venditoreCollegatoShallow: AccountShallowDto
}
class OffertaDto {
  + OffertaDto(): 
  + OffertaDto(Long, LocalDate, LocalTime, BigDecimal, AstaShallowDto): 
  # idOfferta: Long
  # oraInvio: LocalTime
  # dataInvio: LocalDate
  # astaRiferimentoShallow: AstaShallowDto
  # valore: BigDecimal
  + toOfferta(): Offerta
  + toOffertaRicevuta(): OffertaRicevuta
   dataInvio: LocalDate
   valore: BigDecimal
   idOfferta: Long
   astaRiferimentoShallow: AstaShallowDto
   oraInvio: LocalTime
}
class OffertaDtoComparator {
  + areContentsTheSame(OffertaDto, OffertaDto): Boolean
  + areItemsTheSame(OffertaDto, OffertaDto): Boolean
}
class OffertaInversaDto {
  + OffertaInversaDto(Long, LocalDate, LocalTime, BigDecimal, AccountShallowDto, AstaShallowDto): 
  + OffertaInversaDto(): 
  + toOffertaRicevuta(): OffertaRicevuta
  + toOfferta(): Offerta
}
class OffertaInversaPagingSource {
  + OffertaInversaPagingSource(OffertaInversaRepository, Long): 
  + getRefreshKey(PagingState<Long, OffertaInversaDto>): Long?
  + suspend  load(LoadParams<Long>): LoadResult<Long, OffertaInversaDto>
}
class OffertaInversaRepository {
  + OffertaInversaRepository(OffertaInversaService): 
  + suspend  inviaOffertaInversa(OffertaInversaDto): OffertaInversaDto
  + suspend  recuperaOfferteInverse(Long, Long, Long): Page<OffertaInversaDto>
  + suspend  recuperaOffertaPersonalePiuBassaInversa(Long, Long): OffertaInversaDto
  + suspend  recuperaOffertaPiuBassa(Long): OffertaInversaDto
}
interface OffertaInversaService << interface >> {
  + suspend  recuperaOffertaPersonalePiuBassaInversa(Long, Long): Response<OffertaInversaDto>
  + suspend  inviaOffertaInversa(OffertaInversaDto): Response<OffertaInversaDto>
  + suspend  recuperaOfferteInverse(Long, Long, Long): Response<Page<OffertaInversaDto>>
  + suspend  recuperaOffertaPiuBassa(Long): Response<OffertaInversaDto>
}
class OffertaShallowDto {
  + OffertaShallowDto(): 
  - idOfferta: Long
  - tipoOffertaPerAccount: String
  - tipoOffertaSpecifica: String
   idOfferta: Long
   tipoOffertaSpecifica: String
   tipoOffertaPerAccount: String
}
class OffertaSilenziosaDto {
  + OffertaSilenziosaDto(Long, LocalDate, LocalTime, BigDecimal, AccountShallowDto, String, AstaShallowDto): 
  + OffertaSilenziosaDto(): 
  - stato: String
  + toOfferta(): Offerta
  + toOffertaRicevuta(): OffertaRicevuta
   stato: String
}
class OffertaSilenziosaPagingSource {
  + OffertaSilenziosaPagingSource(OffertaSilenziosaRepository, Long): 
  + suspend  load(LoadParams<Long>): LoadResult<Long, OffertaSilenziosaDto>
  + getRefreshKey(PagingState<Long, OffertaSilenziosaDto>): Long?
}
class OffertaSilenziosaRepository {
  + OffertaSilenziosaRepository(OffertaSilenziosaService): 
  + suspend  recuperaOfferteSilenziose(Long, Long, Long): Page<OffertaSilenziosaDto>
  + suspend  rifiutaOfferta(OffertaSilenziosaDto, Long): OffertaSilenziosaDto
  + suspend  inviaOffertaSilenziosa(OffertaSilenziosaDto): OffertaSilenziosaDto
  + suspend  recuperaOffertaPersonalePiuAltaSilenziosa(Long, Long): OffertaSilenziosaDto
  + suspend  accettaOfferta(OffertaSilenziosaDto, Long): OffertaSilenziosaDto
}
interface OffertaSilenziosaService << interface >> {
  + suspend  inviaOffertaSilenziosa(OffertaSilenziosaDto): Response<OffertaSilenziosaDto>
  + suspend  recuperaOffertaPersonalePiuAltaSilenziosa(Long, Long): Response<OffertaSilenziosaDto>
  + suspend  recuperaOfferteSilenziose(Long, Long, Long): Response<Page<OffertaSilenziosaDto>>
  + suspend  rifiutaOfferta(OffertaSilenziosaDto, Long): Response<OffertaSilenziosaDto>
  + suspend  accettaOfferta(OffertaSilenziosaDto, Long): Response<OffertaSilenziosaDto>
}
class OffertaTempoFissoDto {
  + OffertaTempoFissoDto(): 
  + OffertaTempoFissoDto(Long, LocalDate, LocalTime, BigDecimal, AccountShallowDto, AstaShallowDto): 
  + toOfferta(): Offerta
  + toOffertaRicevuta(): OffertaRicevuta
}
class OffertaTempoFissoPagingSource {
  + OffertaTempoFissoPagingSource(OffertaTempoFissoRepository, Long): 
  + suspend  load(LoadParams<Long>): LoadResult<Long, OffertaTempoFissoDto>
  + getRefreshKey(PagingState<Long, OffertaTempoFissoDto>): Long?
}
class OffertaTempoFissoRepository {
  + OffertaTempoFissoRepository(OffertaTempoFissoService): 
  + suspend  recuperaOffertaPersonalePiuAltaTempoFisso(Long, Long): OffertaTempoFissoDto
  + suspend  inviaOffertaTempoFisso(OffertaTempoFissoDto): OffertaTempoFissoDto
  + suspend  recuperaOffertaPiuAlta(Long): OffertaTempoFissoDto
  + suspend  recuperaOfferteTempoFisso(Long, Long, Long): Page<OffertaTempoFissoDto>
}
interface OffertaTempoFissoService << interface >> {
  + suspend  recuperaOffertaPiuAlta(Long): Response<OffertaTempoFissoDto>
  + suspend  recuperaOfferteTempoFisso(Long, Long, Long): Response<Page<OffertaTempoFissoDto>>
  + suspend  inviaOffertaTempoFisso(OffertaTempoFissoDto): Response<OffertaTempoFissoDto>
  + suspend  recuperaOffertaPersonalePiuAltaTempoFisso(Long, Long): Response<OffertaTempoFissoDto>
}
interface OnBackButton << interface >> {
  + onBackButton(): Unit
}
interface OnChangeActivity << interface >> {
  + onChangeActivity(Class<Activity>): Unit
}
interface OnEditButton << interface >> {
  + onEditButton(Long, TipoAsta, KClass<?>): Unit
}
interface OnGoToBids << interface >> {
  + onGoToBids(Long, TipoAsta, KClass<?>): Unit
}
interface OnGoToCreatedAuctions << interface >> {
  + onGoToCreatedAuctions(): Unit
}
interface OnGoToDetails << interface >> {
  + onGoToDetails(Long, TipoAsta, KClass<?>): Unit
}
interface OnGoToHelp << interface >> {
  + onGoToHelp(): Unit
}
interface OnGoToHome << interface >> {
  + onGoToHome(): Unit
}
interface OnGoToParticipation << interface >> {
  + onGoToParticipation(): Unit
}
interface OnGoToProfile << interface >> {
  + onGoToProfile(Long, KClass<?>): Unit
}
interface OnHideBackButton << interface >> {
  + onHideBackButton(): Unit
}
interface OnHideMaterialDivider << interface >> {
  + onHideMaterialDivider(Boolean): Unit
}
interface OnNextStep << interface >> {
  + onNextStep(KClass<?>): Unit
}
interface OnOpenUrl << interface >> {
  + onOpenUrl(String): Unit
}
interface OnRefresh << interface >> {
  + onRefresh(Long, TipoAsta, KClass<?>): Unit
}
interface OnShowBackButton << interface >> {
  + onShowBackButton(): Unit
}
class Page<T> {
  + Page(): 
  + Page(List<T>, Pageable, int, int, boolean, int, boolean, int, int, Sort, boolean): 
  - totalElements: int
  - totalPages: int
  - number: int
  - first: boolean
  - content: List<T>
  - pageable: Pageable
  - last: boolean
  - size: int
  - sort: Sort
  - empty: boolean
  - numberOfElements: int
   sort: Sort
   numberOfElements: int
   first: boolean
   empty: boolean
   content: List<T>
   totalElements: int
   last: boolean
   size: int
   number: int
   totalPages: int
   pageable: Pageable
}
class Pageable {
  + Pageable(int, int, Sort, int, boolean, boolean): 
  + Pageable(): 
  - pageNumber: int
  - sort: Sort
  - unpaged: boolean
  - paged: boolean
  - pageSize: int
  - offset: int
   sort: Sort
   paged: boolean
   pageSize: int
   pageNumber: int
   offset: int
   unpaged: boolean
}
class ProfiloDto {
  + ProfiloDto(): 
  + ProfiloDto(String, byte[], AnagraficaProfiloDto, LinksProfiloDto, Set<AccountShallowDto>): 
  - profilePicture: byte[]
  - nomeUtente: String
  - anagrafica: AnagraficaProfiloDto
  - links: LinksProfiloDto
  - accountsShallow: Set<AccountShallowDto>
  + toAccount(): Account
  + toAnteprimaProfilo(): AnteprimaProfilo
  + toProfilo(): Profilo
   accountsShallow: Set<AccountShallowDto>
   nomeUtente: String
   links: LinksProfiloDto
   anagrafica: AnagraficaProfiloDto
   profilePicture: byte[]
}
class ProfiloRepository {
  + ProfiloRepository(ProfiloService): 
  + suspend  creazioneAccountProfilo(String, PutProfiloDto): ProfiloDto
  + suspend  caricaProfilo(String): ProfiloDto
  + suspend  aggiornaProfilo(ProfiloDto, String): ProfiloDto
}
interface ProfiloService << interface >> {
  + suspend  aggiornaProfilo(ProfiloDto, String): Response<ProfiloDto>
  + suspend  creazioneAccountProfilo(String, PutProfiloDto): Response<ProfiloDto>
  + suspend  caricaProfilo(String): Response<ProfiloDto>
}
class ProfiloShallowDto {
  + ProfiloShallowDto(String): 
  + ProfiloShallowDto(): 
  - nomeUtente: String
   nomeUtente: String
}
class PutProfiloDto {
  + PutProfiloDto(): 
  + PutProfiloDto(String, byte[], AnagraficaProfiloDto, LinksProfiloDto, String, String, TokensAccountDto, String): 
  - anagrafica: AnagraficaProfiloDto
  - nomeUtente: String
  - profilePicture: byte[]
  - email: String
  - tokens: TokensAccountDto
  - tipoAccount: String
  - password: String
  - links: LinksProfiloDto
   password: String
   tipoAccount: String
   links: LinksProfiloDto
   email: String
   profilePicture: byte[]
   tokens: TokensAccountDto
   nomeUtente: String
   anagrafica: AnagraficaProfiloDto
}
class Registrazione {
  + Registrazione(): 
  + onBackButton(): Unit
  # onCreate(Bundle?): Unit
  + onChangeActivity(Class<Activity>): Unit
  + onNextStep(KClass<?>): Unit
   navController: NavController
   viewModel: ModelRegistrazione
   authRepository: AuthRepository
}
class RetrofitController {
   okHttpClient: OkHttpClient
   objectMapper: ObjectMapper
}
class ScelteIniziali {
  + ScelteIniziali(): 
  + onChangeActivity(Class<Activity>): Unit
  + onShowBackButton(): Unit
  + onHideBackButton(): Unit
  # onCreate(Bundle?): Unit
  + onNextStep(KClass<?>): Unit
   venditoreRepository: VenditoreRepository
   navController: NavController
   authRepository: AuthRepository
   compratoreRepository: CompratoreRepository
}
interface Service << interface >>
class Sort {
  + Sort(boolean, boolean, boolean): 
  + Sort(): 
  - empty: boolean
  - sorted: boolean
  - unsorted: boolean
   empty: boolean
   sorted: boolean
   unsorted: boolean
}
enum StatoAsta << enumeration >> {
  - StatoAsta(): 
  + values(): StatoAsta[]
  + valueOf(String): StatoAsta
   entries: EnumEntries<StatoAsta>
}
enum StatoOfferta << enumeration >> {
  - StatoOfferta(): 
  + values(): StatoOfferta[]
  + valueOf(String): StatoOfferta
   entries: EnumEntries<StatoOfferta>
}
enum TipoAccount << enumeration >> {
  - TipoAccount(): 
  + values(): TipoAccount[]
  + valueOf(String): TipoAccount
   entries: EnumEntries<TipoAccount>
}
enum TipoAsta << enumeration >> {
  - TipoAsta(): 
  + valueOf(String): TipoAsta
  + values(): TipoAsta[]
   entries: EnumEntries<TipoAsta>
}
class TokenDto {
  + TokenDto(): 
  - token: String
   token: String
}
class TokensAccountDto {
  + TokensAccountDto(): 
  + TokensAccountDto(String, String, String, String): 
  - idX: String
  - idGoogle: String
  - idFacebook: String
  - idGitHub: String
   idFacebook: String
   idGitHub: String
   idGoogle: String
   idX: String
}
annotation UIBuilder << annotation >>
class UrlDto {
  + UrlDto(): 
  - url: String
   url: String
}
annotation Utility << annotation >>
annotation Validation << annotation >>
class VenditoreDto {
  + VenditoreDto(): 
  + VenditoreDto(Long, String, String, TokensAccountDto, ProfiloShallowDto): 
  + toAccount(): Account
}
class VenditoreRepository {
  + VenditoreRepository(VenditoreService): 
  + suspend  caricaAccountVenditore(Long): VenditoreDto
  + suspend  creaAccountVenditore(VenditoreDto): VenditoreDto
  + suspend  accediVenditore(String): VenditoreDto
}
interface VenditoreService << interface >> {
  + suspend  caricaAccountVenditore(Long): Response<VenditoreDto>
  + suspend  creaAccountVenditore(VenditoreDto): Response<VenditoreDto>
  + suspend  accediVenditore(String): Response<Page<VenditoreDto>>
}
class ViewHolderAnteprimaAsta {
  + ViewHolderAnteprimaAsta(AstaBinding): 
  - suspend  recuperaOfferta(AnteprimaAsta): OffertaDto
  + cleanListeners(): Unit
  + bind(AnteprimaAsta, Resources): Unit
   logger: Logger
   offertaInversaRepository: OffertaInversaRepository
   offertaTempoFissoRepository: OffertaTempoFissoRepository
   listeners: Context
}
class ViewHolderAstaCreata {
  + ViewHolderAstaCreata(AstaBinding): 
  + cleanListeners(): Unit
  - suspend  clickConferma(AnteprimaAsta): Unit
  + bind(AnteprimaAsta, Resources): Unit
  - suspend  recuperaOfferta(AnteprimaAsta): OffertaDto
   logger: Logger
   astaInversaRepository: AstaInversaRepository
   astaTempoFissoRepository: AstaTempoFissoRepository
   astaSilenziosaRepository: AstaSilenziosaRepository
   offertaInversaRepository: OffertaInversaRepository
   offertaTempoFissoRepository: OffertaTempoFissoRepository
   listeners: Context
}
class ViewHolderNotifica {
  + ViewHolderNotifica(NotificaBinding): 
  - suspend  caricaAsta(Notifica): AstaDto
  + bind(Notifica, Resources): Unit
  + cleanListeners(): Unit
  - suspend  recuperaMittente(Notifica): ProfiloDto
   tempoFissoRepository: AstaTempoFissoRepository
   venditoreRepository: VenditoreRepository
   profiloRepository: ProfiloRepository
   logger: Logger
   inversaRepository: AstaInversaRepository
   silenziosaRepository: AstaSilenziosaRepository
   listeners: Context
   compratoreRepository: CompratoreRepository
}
class ViewHolderOfferta {
  + ViewHolderOfferta(OffertaBinding): 
  + bind(OffertaRicevuta, Resources): Unit
  - suspend  clickRifiuta(Long, Long, Resources, OffertaRicevuta): Unit
  + cleanListeners(): Unit
  - suspend  clickAccetta(Long, Long, Resources, OffertaRicevuta): Unit
  - suspend  recuperaOfferente(OffertaRicevuta): ProfiloDto
   silenziosaRepository: OffertaSilenziosaRepository
   profiloRepository: ProfiloRepository
   logger: Logger
   listeners: Context
   compratoreRepository: CompratoreRepository
}
class ViewHolderPartecipazione {
  + ViewHolderPartecipazione(AstaBinding): 
  - suspend  recuperaOffertaPersonale(AnteprimaAsta): OffertaDto
  - suspend  recuperaOffertaMigliore(AnteprimaAsta): OffertaDto
  + bind(AnteprimaAsta, Resources): Unit
  + cleanListeners(): Unit
   offertaSilenziosaRepository: OffertaSilenziosaRepository
   logger: Logger
   offertaInversaRepository: OffertaInversaRepository
   offertaTempoFissoRepository: OffertaTempoFissoRepository
   listeners: Context
}
entity Account << data >> {
  + Account(): 
  + Account(Long, String, String, String, TipoAccount): 
   password: String
   idAccount: Long
   tipoAccount: TipoAccount
   idFacebook: String
   email: String
}
entity AccountProfilo << data >> {
  + AccountProfilo(): 
  + AccountProfilo(Account, String, String, String, LocalDate, Byte[], String, String, String, String, String, String, String, String): 
}
entity AnteprimaAsta << data >> {
  + AnteprimaAsta(Long, StatoAsta, TipoAsta, LocalDate, LocalTime, Byte[], String, BigDecimal): 
  + AnteprimaAsta(): 
   oraScadenza: LocalTime
   nome: String
   tipoAsta: TipoAsta
   dataScadenza: LocalDate
   id: Long
   foto: Byte[]
   stato: StatoAsta
   prezzo: BigDecimal
}
entity AnteprimaProfilo << data >> {
  + AnteprimaProfilo(String, TipoAccount, Byte[]): 
  + AnteprimaProfilo(): 
   nome: String
   immagineProfilo: Byte[]
   tipoAccount: TipoAccount
}
entity Asta << data >> {
  + Asta(): 
  + Asta(Long, StatoAsta, Long, TipoAsta, LocalDate, LocalTime?, BigDecimal, Byte[], String, CategoriaAsta, String): 
   tipo: TipoAsta
   dataFine: LocalDate
   nome: String
   oraFine: LocalTime?
   idCreatore: Long
   idAsta: Long
   immagine: Byte[]
   stato: StatoAsta
   descrizione: String
   categoria: CategoriaAsta
   prezzo: BigDecimal
}
entity DettagliAsta << data >> {
  + DettagliAsta(): 
  + DettagliAsta(AnteprimaAsta, CategoriaAsta, Long, String, String): 
   idCreatore: Long
   anteprimaAsta: AnteprimaAsta
   descrizione: String
   categoria: CategoriaAsta
   nomeCreatore: String
}
entity Notifica << data >> {
  + Notifica(): 
  + Notifica(Long, TipoAsta, Long, String, Byte[], String, LocalDate, LocalTime): 
   immagineMittente: Byte[]
   dataInvio: LocalDate
   tipoAsta: TipoAsta
   messaggio: String
   mittente: String
   idAsta: Long
   idMittente: Long
   oraInvio: LocalTime
}
entity Offerta << data >> {
  + Offerta(Long, Long, Long, BigDecimal, LocalDate, LocalTime): 
  + Offerta(): 
   offerta: BigDecimal
   dataInvio: LocalDate
   idOfferta: Long
   idOfferente: Long
   idAsta: Long
   oraInvio: LocalTime
}
entity OffertaRicevuta << data >> {
  + OffertaRicevuta(): 
  + OffertaRicevuta(Long, Long, TipoAsta, Long, String, Byte[], BigDecimal, LocalDate, LocalTime, StatoOfferta?): 
   dataInvio: LocalDate
   stato: StatoOfferta?
   idOfferente: Long
   tipoAsta: TipoAsta
   immagineOfferente: Byte[]
   offerta: BigDecimal
   idOfferta: Long
   idAsta: Long
   oraInvio: LocalTime
   nomeOfferente: String
}
entity Profilo << data >> {
  + Profilo(Pair<Long, Long>, String, String, Byte[], String, String, String, LocalDate, String, String, String, String, String, String, String, String): 
  + Profilo(): 
   dataNascita: LocalDate
   nome: String
   idAccountCollegati: Pair<Long, Long>
   linkPersonale: String
   immagineProfilo: Byte[]
   nomeUtente: String
   linkFacebook: String
   linkGitHub: String
   linkX: String
   areaGeografica: String
   tipoAccount: String
   email: String
   linkInstagram: String
   cognome: String
   genere: String
   biografia: String
}

Accesso                                  -[#595959,dashed]->  CompratoreDto                           : "«create»"
Accesso                                  -[#595959,dashed]->  DietiDeals24Activity                    : "«create»"
Accesso                                  -[#000082,plain]-^  DietiDeals24Activity                    
AccountDto                              "1" *-[#595959,plain]-> "astePosseduteShallow\n*" AstaShallowDto                          
AccountDto                              "1" *-[#595959,plain]-> "notificheInviateShallow\n*" NotificaShallowDto                      
AccountDto                              "1" *-[#595959,plain]-> "offerteCollegateShallow\n*" OffertaShallowDto                       
AccountDto                              "1" *-[#595959,plain]-> "profiloShallow\n1" ProfiloShallowDto                       
AccountDto                               -[#595959,dashed]->  ProfiloShallowDto                       : "«create»"
AccountDto                              "1" *-[#595959,plain]-> "tokens\n1" TokensAccountDto                        
AccountDto                               -[#595959,dashed]->  TokensAccountDto                        : "«create»"
AdapterAsteCreate                        -[#595959,dashed]->  ViewHolderAstaCreata                    : "«create»"
AdapterHome                              -[#595959,dashed]->  ViewHolderAnteprimaAsta                 : "«create»"
AdapterNotifiche                         -[#595959,dashed]->  ViewHolderNotifica                      : "«create»"
AdapterOfferte                           -[#595959,dashed]->  ViewHolderOfferta                       : "«create»"
AdapterPartecipazioni                    -[#595959,dashed]->  ViewHolderPartecipazione                : "«create»"
ApiCall                                  +-[#820000,plain]-  AstaInversaRepository                   
ApiCall                                  +-[#820000,plain]-  AstaSilenziosaRepository                
ApiCall                                  +-[#820000,plain]-  AstaTempoFissoRepository                
AstaDiCompratoreDto                      -[#000082,plain]-^  AstaDto                                 
AstaDiVenditoreDto                       -[#000082,plain]-^  AstaDto                                 
AstaDto                                 "1" *-[#595959,plain]-> "proprietarioShallow\n1" AccountShallowDto                       
AstaDto                                  -[#595959,dashed]->  AccountShallowDto                       : "«create»"
AstaDto                                 "1" *-[#595959,plain]-> "categoriaShallow\n1" CategoriaAstaShallowDto                 
AstaDto                                  -[#595959,dashed]->  CategoriaAstaShallowDto                 : "«create»"
AstaDto                                 "1" *-[#595959,plain]-> "notificheAssociateShallow\n*" NotificaShallowDto                      
AstaDto                                 "1" *-[#595959,plain]-> "offerteRicevuteShallow\n*" OffertaShallowDto                       
AstaInversaDto                           -[#000082,plain]-^  AstaDiCompratoreDto                     
AstaInversaDto                           -[#595959,dashed]->  AnteprimaAsta                     : "«create»"
AstaInversaDto                           -[#595959,dashed]->  Asta                              : "«create»"
AstaInversaPagingSource                 "1" *-[#595959,plain]-> "api\n1" ApiCall                                 
AstaInversaPagingSource                 "1" *-[#595959,plain]-> "repository\n1" AstaInversaRepository                   
AstaInversaRepository                    -[#595959,dashed]->  AstaInversaDto                          : "«create»"
AstaInversaRepository                   "1" *-[#595959,plain]-> "service\n1" AstaInversaService                      
AstaInversaRepository                    -[#595959,dashed]->  Page                                    : "«create»"
AstaInversaService                       -[#008200,plain]-^  Service                                 
AstaSilenziosaDto                        -[#000082,plain]-^  AstaDiVenditoreDto                      
AstaSilenziosaDto                        -[#595959,dashed]->  AnteprimaAsta                     : "«create»"
AstaSilenziosaDto                        -[#595959,dashed]->  Asta                              : "«create»"
AstaSilenziosaPagingSource              "1" *-[#595959,plain]-> "api\n1" ApiCall                                 
AstaSilenziosaPagingSource              "1" *-[#595959,plain]-> "repository\n1" AstaSilenziosaRepository                
AstaSilenziosaRepository                 -[#595959,dashed]->  AstaSilenziosaDto                       : "«create»"
AstaSilenziosaRepository                "1" *-[#595959,plain]-> "service\n1" AstaSilenziosaService                   
AstaSilenziosaRepository                 -[#595959,dashed]->  Page                                    : "«create»"
AstaSilenziosaService                    -[#008200,plain]-^  Service                                 
AstaTempoFissoDto                        -[#000082,plain]-^  AstaDiVenditoreDto                      
AstaTempoFissoDto                        -[#595959,dashed]->  AnteprimaAsta                     : "«create»"
AstaTempoFissoDto                        -[#595959,dashed]->  Asta                              : "«create»"
AstaTempoFissoPagingSource              "1" *-[#595959,plain]-> "api\n1" ApiCall                                 
AstaTempoFissoPagingSource              "1" *-[#595959,plain]-> "repository\n1" AstaTempoFissoRepository                
AstaTempoFissoRepository                 -[#595959,dashed]->  AstaTempoFissoDto                       : "«create»"
AstaTempoFissoRepository                "1" *-[#595959,plain]-> "service\n1" AstaTempoFissoService                   
AstaTempoFissoRepository                 -[#595959,dashed]->  Page                                    : "«create»"
AstaTempoFissoService                    -[#008200,plain]-^  Service                                 
AuthRepository                          "1" *-[#595959,plain]-> "service\n1" AuthService                             
AuthService                              -[#008200,plain]-^  Service                                 
CategoriaAstaDto                        "1" *-[#595959,plain]-> "asteAssegnateShallow\n*" AstaShallowDto                          
CategoriaAstaRepository                 "1" *-[#595959,plain]-> "service\n1" CategoriaAstaService                    
CategoriaAstaService                     -[#008200,plain]-^  Service                                 
Companion                                +-[#820000,plain]-  CategoriaAsta                           
Companion                                +-[#820000,plain]-  ImageHandler                            
Companion                                +-[#820000,plain]-  JWT                                     
Companion                                +-[#820000,plain]-  TipoAsta                                
CompratoreDto                            -[#000082,plain]-^  AccountDto                              
CompratoreDto                            -[#595959,dashed]->  Account                           : "«create»"
CompratoreRepository                     -[#595959,dashed]->  CompratoreDto                           : "«create»"
CompratoreRepository                    "1" *-[#595959,plain]-> "service\n1" CompratoreService                       
CompratoreService                        -[#008200,plain]-^  Service                                 
ControllerAiuto                          -[#000082,plain]-^  Controller                              
ControllerAiuto                          -[#595959,dashed]->  Controller                              : "«create»"
ControllerAiuto                         "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerAsteCreate                     -[#000082,plain]-^  Controller                              
ControllerAsteCreate                     -[#595959,dashed]->  Controller                              : "«create»"
ControllerAsteCreate                    "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerCreaAsta                       -[#000082,plain]-^  Controller                              
ControllerCreaAsta                       -[#595959,dashed]->  Controller                              : "«create»"
ControllerCreaAsta                      "1" *-[#595959,plain]-> "listenerGoToHome\n1" OnGoToHome                              
ControllerCreazioneProfiloFase1          -[#000082,plain]-^  Controller                              
ControllerCreazioneProfiloFase1          -[#595959,dashed]->  Controller                              : "«create»"
ControllerCreazioneProfiloFase1         "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerCreazioneProfiloFase1         "1" *-[#595959,plain]-> "listenerNextStep\n1" OnNextStep                              
ControllerCreazioneProfiloFase2          -[#000082,plain]-^  Controller                              
ControllerCreazioneProfiloFase2          -[#595959,dashed]->  Controller                              : "«create»"
ControllerCreazioneProfiloFase2         "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerCreazioneProfiloFase2         "1" *-[#595959,plain]-> "listenerNextStep\n1" OnNextStep                              
ControllerCreazioneProfiloFase3          -[#000082,plain]-^  Controller                              
ControllerCreazioneProfiloFase3          -[#595959,dashed]->  Controller                              : "«create»"
ControllerCreazioneProfiloFase3         "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerCreazioneProfiloFase3         "1" *-[#595959,plain]-> "listenerChangeActivity\n1" OnChangeActivity                        
ControllerDettagliAsta                   -[#595959,dashed]->  AccountShallowDto                       : "«create»"
ControllerDettagliAsta                   -[#595959,dashed]->  AstaShallowDto                          : "«create»"
ControllerDettagliAsta                   -[#000082,plain]-^  Controller                              
ControllerDettagliAsta                   -[#595959,dashed]->  Controller                              : "«create»"
ControllerDettagliAsta                   -[#595959,dashed]->  OffertaInversaDto                       : "«create»"
ControllerDettagliAsta                   -[#595959,dashed]->  OffertaSilenziosaDto                    : "«create»"
ControllerDettagliAsta                   -[#595959,dashed]->  OffertaTempoFissoDto                    : "«create»"
ControllerDettagliAsta                  "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerDettagliAsta                  "1" *-[#595959,plain]-> "listenerEditButton\n1" OnEditButton                            
ControllerDettagliAsta                  "1" *-[#595959,plain]-> "listenerBids\n1" OnGoToBids                              
ControllerDettagliAsta                  "1" *-[#595959,plain]-> "listenerProfile\n1" OnGoToProfile                           
ControllerDettagliAsta                  "1" *-[#595959,plain]-> "listerMaterialDivider\n1" OnHideMaterialDivider                   
ControllerDettagliAsta                  "1" *-[#595959,plain]-> "listenerRefresh\n1" OnRefresh                               
ControllerDettagliProfilo                -[#000082,plain]-^  Controller                              
ControllerDettagliProfilo                -[#595959,dashed]->  Controller                              : "«create»"
ControllerDettagliProfilo               "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerDettagliProfilo               "1" *-[#595959,plain]-> "listenerEditButton\n1" OnEditButton                            
ControllerDettagliProfilo               "1" *-[#595959,plain]-> "listenerOpenUrl\n1" OnOpenUrl                               
ControllerHome                           -[#000082,plain]-^  Controller                              
ControllerHome                           -[#595959,dashed]->  Controller                              : "«create»"
ControllerModificaAsta                   -[#595959,dashed]->  CompratoreDto                           : "«create»"
ControllerModificaAsta                   -[#000082,plain]-^  Controller                              
ControllerModificaAsta                   -[#595959,dashed]->  Controller                              : "«create»"
ControllerModificaAsta                  "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerModificaAsta                  "1" *-[#595959,plain]-> "listenerDetails\n1" OnGoToDetails                           
ControllerModificaProfilo                -[#000082,plain]-^  Controller                              
ControllerModificaProfilo                -[#595959,dashed]->  Controller                              : "«create»"
ControllerModificaProfilo               "1" *-[#595959,plain]-> "listenerProfile\n1" OnGoToProfile                           
ControllerNotifiche                      -[#000082,plain]-^  Controller                              
ControllerNotifiche                      -[#595959,dashed]->  Controller                              : "«create»"
ControllerOfferte                        -[#000082,plain]-^  Controller                              
ControllerOfferte                        -[#595959,dashed]->  Controller                              : "«create»"
ControllerOfferte                       "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerOfferte                       "1" *-[#595959,plain]-> "listenerDetails\n1" OnGoToDetails                           
ControllerPartecipazioni                 -[#000082,plain]-^  Controller                              
ControllerPartecipazioni                 -[#595959,dashed]->  Controller                              : "«create»"
ControllerPartecipazioni                "1" *-[#595959,plain]-> "listenerBackButton\n1" OnBackButton                            
ControllerProfilo                        -[#595959,dashed]->  CompratoreDto                           : "«create»"
ControllerProfilo                        -[#000082,plain]-^  Controller                              
ControllerProfilo                        -[#595959,dashed]->  Controller                              : "«create»"
ControllerProfilo                       "1" *-[#595959,plain]-> "listenerChangeActivity\n1" OnChangeActivity                        
ControllerProfilo                       "1" *-[#595959,plain]-> "listenerCreatedAuctions\n1" OnGoToCreatedAuctions                   
ControllerProfilo                       "1" *-[#595959,plain]-> "listenerHelp\n1" OnGoToHelp                              
ControllerProfilo                       "1" *-[#595959,plain]-> "listenerParticipation\n1" OnGoToParticipation                     
ControllerProfilo                       "1" *-[#595959,plain]-> "listenerProfile\n1" OnGoToProfile                           
ControllerSelezioneAccessoRegistrazione  -[#000082,plain]-^  Controller                              
ControllerSelezioneAccessoRegistrazione  -[#595959,dashed]->  Controller                              : "«create»"
ControllerSelezioneAccessoRegistrazione "1" *-[#595959,plain]-> "listener\n1" OnChangeActivity                        
ControllerSelezioneTipoAccount           -[#000082,plain]-^  Controller                              
ControllerSelezioneTipoAccount           -[#595959,dashed]->  Controller                              : "«create»"
ControllerSelezioneTipoAccount          "1" *-[#595959,plain]-> "changeActivityListener\n1" OnChangeActivity                        
ControllerSelezioneTipoAccount          "1" *-[#595959,plain]-> "hideBackButtonListener\n1" OnHideBackButton                        
ControllerSelezioneTipoAccount          "1" *-[#595959,plain]-> "nextStepListener\n1" OnNextStep                              
ControllerSelezioneTipoAccount          "1" *-[#595959,plain]-> "showBackButtonListener\n1" OnShowBackButton                        
CurrentUser                             "1" *-[#595959,plain]-> "_tipoAccount\n1" TipoAccount                             
Home                                     -[#000082,plain]-^  DietiDeals24Activity                    
Home                                     -[#595959,dashed]->  DietiDeals24Activity                    : "«create»"
Home                                     -[#008200,dashed]-^  OnBackButton                            
Home                                     -[#008200,dashed]-^  OnChangeActivity                        
Home                                     -[#008200,dashed]-^  OnEditButton                            
Home                                     -[#008200,dashed]-^  OnGoToBids                              
Home                                     -[#008200,dashed]-^  OnGoToCreatedAuctions                   
Home                                     -[#008200,dashed]-^  OnGoToDetails                           
Home                                     -[#008200,dashed]-^  OnGoToHelp                              
Home                                     -[#008200,dashed]-^  OnGoToHome                              
Home                                     -[#008200,dashed]-^  OnGoToParticipation                     
Home                                     -[#008200,dashed]-^  OnGoToProfile                           
Home                                     -[#008200,dashed]-^  OnHideMaterialDivider                   
Home                                     -[#008200,dashed]-^  OnOpenUrl                               
Home                                     -[#008200,dashed]-^  OnRefresh                               
KoinModulesKt                            -[#595959,dashed]->  AdapterAsteCreate                       : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AdapterHome                             : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AdapterNotifiche                        : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AdapterOfferte                          : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AdapterPartecipazioni                   : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AstaInversaPagingSource                 : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AstaInversaRepository                   : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AstaSilenziosaPagingSource              : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AstaSilenziosaRepository                : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AstaTempoFissoPagingSource              : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AstaTempoFissoRepository                : "«create»"
KoinModulesKt                            -[#595959,dashed]->  AuthRepository                          : "«create»"
KoinModulesKt                            -[#595959,dashed]->  CategoriaAstaRepository                 : "«create»"
KoinModulesKt                            -[#595959,dashed]->  CompratoreRepository                    : "«create»"
KoinModulesKt                            -[#595959,dashed]->  Logger                                  : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelAsta                               : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelAsteCreate                         : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelHome                               : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelNotifiche                          : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelPartecipazioni                     : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelProfilo                            : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ModelRegistrazione                      : "«create»"
KoinModulesKt                            -[#595959,dashed]->  NotificaPagingSource                    : "«create»"
KoinModulesKt                            -[#595959,dashed]->  NotificaRepository                      : "«create»"
KoinModulesKt                            -[#595959,dashed]->  OffertaInversaPagingSource              : "«create»"
KoinModulesKt                            -[#595959,dashed]->  OffertaInversaRepository                : "«create»"
KoinModulesKt                            -[#595959,dashed]->  OffertaSilenziosaPagingSource           : "«create»"
KoinModulesKt                            -[#595959,dashed]->  OffertaSilenziosaRepository             : "«create»"
KoinModulesKt                            -[#595959,dashed]->  OffertaTempoFissoPagingSource           : "«create»"
KoinModulesKt                            -[#595959,dashed]->  OffertaTempoFissoRepository             : "«create»"
KoinModulesKt                            -[#595959,dashed]->  ProfiloRepository                       : "«create»"
KoinModulesKt                            -[#595959,dashed]->  VenditoreRepository                     : "«create»"
ModelAsta                                -[#595959,dashed]->  AccountShallowDto                       : "«create»"
ModelAsta                                -[#595959,dashed]->  AstaInversaDto                          : "«create»"
ModelAsta                                -[#595959,dashed]->  AstaSilenziosaDto                       : "«create»"
ModelAsta                                -[#595959,dashed]->  AstaTempoFissoDto                       : "«create»"
ModelAsta                                -[#595959,dashed]->  CategoriaAstaShallowDto                 : "«create»"
ModelAsta                                -[#595959,dashed]->  EccezioneCampiNonCompilati              : "«create»"
ModelAsta                                -[#595959,dashed]->  EccezioneDataPassata                    : "«create»"
ModelAsta                                -[#595959,dashed]->  OffertaInversaPagingSource              : "«create»"
ModelAsta                               "1" *-[#595959,plain]-> "pagingSourceInverse\n1" OffertaInversaPagingSource              
ModelAsta                               "1" *-[#595959,plain]-> "inverseRepository\n1" OffertaInversaRepository                
ModelAsta                               "1" *-[#595959,plain]-> "pagingSourceSilenziose\n1" OffertaSilenziosaPagingSource           
ModelAsta                                -[#595959,dashed]->  OffertaSilenziosaPagingSource           : "«create»"
ModelAsta                               "1" *-[#595959,plain]-> "silenziosaRepository\n1" OffertaSilenziosaRepository             
ModelAsta                               "1" *-[#595959,plain]-> "pagingSourceTempoFisso\n1" OffertaTempoFissoPagingSource           
ModelAsta                                -[#595959,dashed]->  OffertaTempoFissoPagingSource           : "«create»"
ModelAsta                               "1" *-[#595959,plain]-> "tempoFissoRepository\n1" OffertaTempoFissoRepository             
ModelAsteCreate                         "1" *-[#595959,plain]-> "pagingSourceInverse\n1" AstaInversaPagingSource                 
ModelAsteCreate                          -[#595959,dashed]->  AstaInversaPagingSource                 : "«create»"
ModelAsteCreate                         "1" *-[#595959,plain]-> "inverseRepository\n1" AstaInversaRepository                   
ModelAsteCreate                          -[#595959,dashed]->  AstaSilenziosaPagingSource              : "«create»"
ModelAsteCreate                         "1" *-[#595959,plain]-> "pagingSourceSilenziose\n1" AstaSilenziosaPagingSource              
ModelAsteCreate                         "1" *-[#595959,plain]-> "silenziosaRepository\n1" AstaSilenziosaRepository                
ModelAsteCreate                         "1" *-[#595959,plain]-> "pagingSourceTempoFisso\n1" AstaTempoFissoPagingSource              
ModelAsteCreate                          -[#595959,dashed]->  AstaTempoFissoPagingSource              : "«create»"
ModelAsteCreate                         "1" *-[#595959,plain]-> "tempoFissoRepository\n1" AstaTempoFissoRepository                
ModelHome                                -[#595959,dashed]->  AstaInversaPagingSource                 : "«create»"
ModelHome                               "1" *-[#595959,plain]-> "pagingSourceInverseTutte\n1" AstaInversaPagingSource                 
ModelHome                               "1" *-[#595959,plain]-> "inverseRepository\n1" AstaInversaRepository                   
ModelHome                               "1" *-[#595959,plain]-> "pagingSourceSilenzioseTutte\n1" AstaSilenziosaPagingSource              
ModelHome                                -[#595959,dashed]->  AstaSilenziosaPagingSource              : "«create»"
ModelHome                               "1" *-[#595959,plain]-> "silenziosaRepository\n1" AstaSilenziosaRepository                
ModelHome                                -[#595959,dashed]->  AstaTempoFissoPagingSource              : "«create»"
ModelHome                               "1" *-[#595959,plain]-> "pagingSourceTempoFissoTutte\n1" AstaTempoFissoPagingSource              
ModelHome                               "1" *-[#595959,plain]-> "tempoFissoRepository\n1" AstaTempoFissoRepository                
ModelNotifiche                           -[#595959,dashed]->  NotificaPagingSource                    : "«create»"
ModelNotifiche                          "1" *-[#595959,plain]-> "pagingSourceNotifiche\n1" NotificaPagingSource                    
ModelNotifiche                          "1" *-[#595959,plain]-> "notificaRepository\n1" NotificaRepository                      
ModelPartecipazioni                     "1" *-[#595959,plain]-> "pagingSourceInverse\n1" AstaInversaPagingSource                 
ModelPartecipazioni                      -[#595959,dashed]->  AstaInversaPagingSource                 : "«create»"
ModelPartecipazioni                     "1" *-[#595959,plain]-> "inverseRepository\n1" AstaInversaRepository                   
ModelPartecipazioni                      -[#595959,dashed]->  AstaSilenziosaPagingSource              : "«create»"
ModelPartecipazioni                     "1" *-[#595959,plain]-> "pagingSourceSilenziose\n1" AstaSilenziosaPagingSource              
ModelPartecipazioni                     "1" *-[#595959,plain]-> "silenziosaRepository\n1" AstaSilenziosaRepository                
ModelPartecipazioni                      -[#595959,dashed]->  AstaTempoFissoPagingSource              : "«create»"
ModelPartecipazioni                     "1" *-[#595959,plain]-> "pagingSourceTempoFisso\n1" AstaTempoFissoPagingSource              
ModelPartecipazioni                     "1" *-[#595959,plain]-> "tempoFissoRepository\n1" AstaTempoFissoRepository                
ModelProfilo                             -[#595959,dashed]->  AnagraficaProfiloDto                    : "«create»"
ModelProfilo                             -[#595959,dashed]->  EccezioneCampiNonCompilati              : "«create»"
ModelProfilo                             -[#595959,dashed]->  LinksProfiloDto                         : "«create»"
ModelProfilo                             -[#595959,dashed]->  ProfiloDto                              : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  AnagraficaProfiloDto                    : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  EccezioneCampiNonCompilati              : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  EccezioneNomeUtenteUsato                : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  LinksProfiloDto                         : "«create»"
ModelRegistrazione                      "1" *-[#595959,plain]-> "profiloRepository\n1" ProfiloRepository                       
ModelRegistrazione                       -[#595959,dashed]->  ProfiloShallowDto                       : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  PutProfiloDto                           : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  TokensAccountDto                        : "«create»"
ModelRegistrazione                       -[#595959,dashed]->  VenditoreDto                            : "«create»"
NotificaDto                              -[#595959,dashed]->  AccountShallowDto                       : "«create»"
NotificaDto                             "1" *-[#595959,plain]-> "destinatariShallow\n*" AccountShallowDto                       
NotificaDto                             "1" *-[#595959,plain]-> "astaAssociataShallow\n1" AstaShallowDto                          
NotificaDto                              -[#595959,dashed]->  AstaShallowDto                          : "«create»"
NotificaDto                              -[#595959,dashed]->  Notifica                          : "«create»"
NotificaPagingSource                    "1" *-[#595959,plain]-> "repository\n1" NotificaRepository                      
NotificaRepository                      "1" *-[#595959,plain]-> "service\n1" NotificaService                         
NotificaRepository                       -[#595959,dashed]->  Page                                    : "«create»"
NotificaService                          -[#008200,plain]-^  Service                                 
OffertaDiCompratoreDto                  "1" *-[#595959,plain]-> "compratoreCollegatoShallow\n1" AccountShallowDto                       
OffertaDiCompratoreDto                   -[#595959,dashed]->  AccountShallowDto                       : "«create»"
OffertaDiCompratoreDto                   -[#000082,plain]-^  OffertaDto                              
OffertaDiVenditoreDto                   "1" *-[#595959,plain]-> "venditoreCollegatoShallow\n1" AccountShallowDto                       
OffertaDiVenditoreDto                    -[#595959,dashed]->  AccountShallowDto                       : "«create»"
OffertaDiVenditoreDto                    -[#000082,plain]-^  OffertaDto                              
OffertaDto                              "1" *-[#595959,plain]-> "astaRiferimentoShallow\n1" AstaShallowDto                          
OffertaDto                               -[#595959,dashed]->  AstaShallowDto                          : "«create»"
OffertaInversaDto                        -[#000082,plain]-^  OffertaDiVenditoreDto                   
OffertaInversaDto                        -[#595959,dashed]->  Offerta                           : "«create»"
OffertaInversaDto                        -[#595959,dashed]->  OffertaRicevuta                   : "«create»"
OffertaInversaPagingSource              "1" *-[#595959,plain]-> "repository\n1" OffertaInversaRepository                
OffertaInversaRepository                 -[#595959,dashed]->  OffertaInversaDto                       : "«create»"
OffertaInversaRepository                "1" *-[#595959,plain]-> "service\n1" OffertaInversaService                   
OffertaInversaRepository                 -[#595959,dashed]->  Page                                    : "«create»"
OffertaInversaService                    -[#008200,plain]-^  Service                                 
OffertaSilenziosaDto                     -[#000082,plain]-^  OffertaDiCompratoreDto                  
OffertaSilenziosaDto                     -[#595959,dashed]->  Offerta                           : "«create»"
OffertaSilenziosaDto                     -[#595959,dashed]->  OffertaRicevuta                   : "«create»"
OffertaSilenziosaPagingSource           "1" *-[#595959,plain]-> "repository\n1" OffertaSilenziosaRepository             
OffertaSilenziosaRepository              -[#595959,dashed]->  OffertaSilenziosaDto                    : "«create»"
OffertaSilenziosaRepository             "1" *-[#595959,plain]-> "service\n1" OffertaSilenziosaService                
OffertaSilenziosaRepository              -[#595959,dashed]->  Page                                    : "«create»"
OffertaSilenziosaService                 -[#008200,plain]-^  Service                                 
OffertaTempoFissoDto                     -[#000082,plain]-^  OffertaDiCompratoreDto                  
OffertaTempoFissoDto                     -[#595959,dashed]->  Offerta                           : "«create»"
OffertaTempoFissoDto                     -[#595959,dashed]->  OffertaRicevuta                   : "«create»"
OffertaTempoFissoPagingSource           "1" *-[#595959,plain]-> "repository\n1" OffertaTempoFissoRepository             
OffertaTempoFissoRepository              -[#595959,dashed]->  OffertaTempoFissoDto                    : "«create»"
OffertaTempoFissoRepository             "1" *-[#595959,plain]-> "service\n1" OffertaTempoFissoService                
OffertaTempoFissoRepository              -[#595959,dashed]->  Page                                    : "«create»"
OffertaTempoFissoService                 -[#008200,plain]-^  Service                                 
Page                                     -[#595959,dashed]->  Pageable                                : "«create»"
Page                                    "1" *-[#595959,plain]-> "pageable\n1" Pageable                                
Page                                     -[#595959,dashed]->  Sort                                    : "«create»"
Page                                    "1" *-[#595959,plain]-> "sort\n1" Sort                                    
Pageable                                "1" *-[#595959,plain]-> "sort\n1" Sort                                    
Pageable                                 -[#595959,dashed]->  Sort                                    : "«create»"
ProfiloDto                               -[#595959,dashed]->  AccountShallowDto                       : "«create»"
ProfiloDto                              "1" *-[#595959,plain]-> "accountsShallow\n*" AccountShallowDto                       
ProfiloDto                              "1" *-[#595959,plain]-> "anagrafica\n1" AnagraficaProfiloDto                    
ProfiloDto                               -[#595959,dashed]->  AnagraficaProfiloDto                    : "«create»"
ProfiloDto                               -[#595959,dashed]->  LinksProfiloDto                         : "«create»"
ProfiloDto                              "1" *-[#595959,plain]-> "links\n1" LinksProfiloDto                         
ProfiloDto                               -[#595959,dashed]->  Account                           : "«create»"
ProfiloDto                               -[#595959,dashed]->  AnteprimaProfilo                  : "«create»"
ProfiloDto                               -[#595959,dashed]->  Profilo                           : "«create»"
ProfiloRepository                        -[#595959,dashed]->  ProfiloDto                              : "«create»"
ProfiloRepository                       "1" *-[#595959,plain]-> "service\n1" ProfiloService                          
ProfiloService                           -[#008200,plain]-^  Service                                 
PutProfiloDto                           "1" *-[#595959,plain]-> "anagrafica\n1" AnagraficaProfiloDto                    
PutProfiloDto                            -[#595959,dashed]->  AnagraficaProfiloDto                    : "«create»"
PutProfiloDto                           "1" *-[#595959,plain]-> "links\n1" LinksProfiloDto                         
PutProfiloDto                            -[#595959,dashed]->  LinksProfiloDto                         : "«create»"
PutProfiloDto                            -[#595959,dashed]->  TokensAccountDto                        : "«create»"
PutProfiloDto                           "1" *-[#595959,plain]-> "tokens\n1" TokensAccountDto                        
Registrazione                            -[#000082,plain]-^  DietiDeals24Activity                    
Registrazione                            -[#595959,dashed]->  DietiDeals24Activity                    : "«create»"
Registrazione                            -[#008200,dashed]-^  OnBackButton                            
Registrazione                            -[#008200,dashed]-^  OnChangeActivity                        
Registrazione                            -[#008200,dashed]-^  OnNextStep                              
ScelteIniziali                           -[#595959,dashed]->  CompratoreDto                           : "«create»"
ScelteIniziali                           -[#595959,dashed]->  DietiDeals24Activity                    : "«create»"
ScelteIniziali                           -[#000082,plain]-^  DietiDeals24Activity                    
ScelteIniziali                           -[#008200,dashed]-^  OnChangeActivity                        
ScelteIniziali                           -[#008200,dashed]-^  OnHideBackButton                        
ScelteIniziali                           -[#008200,dashed]-^  OnNextStep                              
ScelteIniziali                           -[#008200,dashed]-^  OnShowBackButton                        
VenditoreDto                             -[#000082,plain]-^  AccountDto                              
VenditoreDto                             -[#595959,dashed]->  Account                           : "«create»"
VenditoreRepository                      -[#595959,dashed]->  VenditoreDto                            : "«create»"
VenditoreRepository                     "1" *-[#595959,plain]-> "service\n1" VenditoreService                        
VenditoreService                         -[#008200,plain]-^  Service                                 
ViewHolderAnteprimaAsta                 "1" *-[#595959,plain]-> "listenerGoToDetails\n1" OnGoToDetails                           
ViewHolderAstaCreata                    "1" *-[#595959,plain]-> "listenerEditButton\n1" OnEditButton                            
ViewHolderAstaCreata                    "1" *-[#595959,plain]-> "listenerGoToBids\n1" OnGoToBids                              
ViewHolderAstaCreata                    "1" *-[#595959,plain]-> "listenerGoToDetails\n1" OnGoToDetails                           
ViewHolderAstaCreata                    "1" *-[#595959,plain]-> "listenerRefresh\n1" OnRefresh                               
ViewHolderNotifica                       -[#595959,dashed]->  CompratoreDto                           : "«create»"
ViewHolderNotifica                      "1" *-[#595959,plain]-> "listenerGoToDetails\n1" OnGoToDetails                           
ViewHolderNotifica                      "1" *-[#595959,plain]-> "listenerGoToProfile\n1" OnGoToProfile                           
ViewHolderOfferta                        -[#595959,dashed]->  OffertaSilenziosaDto                    : "«create»"
ViewHolderOfferta                       "1" *-[#595959,plain]-> "immagineListener\n1" OnGoToProfile                           
ViewHolderOfferta                       "1" *-[#595959,plain]-> "refreshListener\n1" OnRefresh                               
ViewHolderPartecipazione                 -[#595959,dashed]->  OffertaSilenziosaDto                    : "«create»"
ViewHolderPartecipazione                "1" *-[#595959,plain]-> "listenerGoToDetails\n1" OnGoToDetails                           
Account                           "1" *-[#595959,plain]-> "tipoAccount\n1" TipoAccount
AccountProfilo                    "1" *-[#595959,plain]-> "_account\n1" Account
AccountProfilo                     -[#595959,dashed]->  Account                           : "«create»"
AnteprimaAsta                     "1" *-[#595959,plain]-> "stato\n1" StatoAsta
AnteprimaAsta                     "1" *-[#595959,plain]-> "tipoAsta\n1" TipoAsta
AnteprimaProfilo                  "1" *-[#595959,plain]-> "tipoAccount\n1" TipoAccount
Asta                              "1" *-[#595959,plain]-> "categoria\n1" CategoriaAsta
Asta                              "1" *-[#595959,plain]-> "stato\n1" StatoAsta
Asta                              "1" *-[#595959,plain]-> "tipo\n1" TipoAsta
DettagliAsta                      "1" *-[#595959,plain]-> "categoria\n1" CategoriaAsta
DettagliAsta                      "1" *-[#595959,plain]-> "anteprimaAsta\n1" AnteprimaAsta
DettagliAsta                       -[#595959,dashed]->  AnteprimaAsta                     : "«create»"
Notifica                          "1" *-[#595959,plain]-> "tipoAsta\n1" TipoAsta
OffertaRicevuta                   "1" *-[#595959,plain]-> "stato\n1" StatoOfferta
OffertaRicevuta                   "1" *-[#595959,plain]-> "tipoAsta\n1" TipoAsta
@enduml
